// Jetpack! // A spiffy real-time interface for designing websites.// Released under the GNU public license!// Thank you, http://yelotofu.com/2008/08/jquery-outerhtml/// for this lovely function. <3 jQuery.fn.outerHTML = function(s){	return (s)	? this.before(s).remove()	: jQuery("<p>").append(this.eq(0).clone()).html();}// Thank you, http://stackoverflow.com/questions/411688/// for this lovely function. <3 $.fn.tagName = function() {    return this.get(0).tagName;}// Wait for it...// Wait for it...$(document).ready(function(){	Jetpack.Open();	$(document).keydown(function(event)	{			if(event.keyCode == 27)		{			Jetpack.Close();			event.preventDefault();		}	});});// And now for everything Jetpack!var Jetpack = new Object;Jetpack.Open = function(){	$('*').click( function(e) { if(e.ctrlKey) { Jetpack.Edit(this); return false; } } );	$('*').dblclick( function() { Jetpack.Edit(this); return false; } );}Jetpack.Close = function(){	$('#jetpack').remove();}Jetpack.Window = function(Input){	var Selector = "#jetpack[window='"+Input.name+"']";			if($(Selector).length) // If the window has already been created.	{		$(Selector + ' > div#title').html(Input.title);		$(Selector + ' > div#content').html(Input.contents);	}	else // Create new window.	{		Jetpack.title = "<div id='title'>" + Input.title + "</div>";		Jetpack.contents = "<div id='jetpack-content'>" + Input.contents + "</div>";			Jetpack.window = "<div id='jetpack' window='" + Input.name + "'>" + Jetpack.title + Jetpack.contents + "</div>";			$('body').append(Jetpack.window);			if('resize' in Input)			$(Selector).resizable().draggable();		else			$(Selector).draggable();		$(Selector).fadeIn('slow');	}}Jetpack.Clean = function(Element, Indent){	var Output = '';	var Tag = Element.tagName().toLowerCase();	var Attributes = Element.mapAttributes();	var AttributeString = '';		for(var Attribute in Attributes)	{		// List the attributes, but don't display the Jetpack selector.		if(Attribute != 'jetpack')			AttributeString += ' ' + Attribute + '="' + Attributes[Attribute] + '"';	}		Output += '<' + Tag + AttributeString + '>';	Element.contents().each(function(Index)	{		if($(this).children().length)			Output += Jetpack.Clean($(this), Indent + '	');		else		{			// If the line only contains whitespace, and is the last in this element.			if($(this).outerHTML().match(/^\n\t+$/) && (Element.contents().length - 1) == Index)				Output += "\n" + Indent.substr(1);			else			{				// If this is the last line, remove trailing whitespace.				if((Element.contents().length - 1) == Index)					var Text = $(this).outerHTML().replace(/\t+$/, '');				else					var Text = $(this).outerHTML();								Output += Text.replace(/\n\t+/g, '\n' + Indent);			}		}	});	Output += '</' + Tag + '>';		return Output;}// The plain HTML editor.Jetpack.Plain = function(Element){	var Content = Jetpack.Clean(Element, '	');		return '<textarea>' + Content + '</textarea>';}// The fancy HTML editor.Jetpack.Fancy = function(Element){}Jetpack.Edit = function(Element){	// Clean up previous edits.	$('[jetpack=edit]').removeAttr('jetpack');	// Set an attribute to select this element via jQuery.	Element.setAttribute('jetpack', 'edit');	var Attributes = $('[jetpack=edit]').mapAttributes();	var Title = Element.tagName.toLowerCase();		if('id' in Attributes) // Display style edit link for the ID. Quotes need to be escaped with \x22!		Title += " <a href='javascript:Jetpack.Style(\x22#" + Attributes['id'] + "\x22)'>#" + Attributes['id'] + "</a>";		if('class' in Attributes) // Display style edit link for the class. Quotes need to be escaped with \x22!		Title += " <a href='javascript:Jetpack.Style(\x22." + Attributes['class'] + "\x22)'>."+ Attributes['class'] +"</a>";		Title += " &mdash; <a href='javascript:Jetpack.Edit("+Element.parentNode+")'>Parent</a>";		// Make an object with the window contents.	Jetpack.contents = {						name: 'Editor',						title: Title,						contents: Jetpack.Plain($('[jetpack=edit]')),						resize: true					 };	Jetpack.Window(Jetpack.contents);}Jetpack.Parent = function(Element){	}Jetpack.Style = function(Element){	alert('derrrrr open ' + Element);}Jetpack.Remove = function(Element){}